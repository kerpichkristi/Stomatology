@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> _UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();

}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <hr>
    @if (User.IsInRole("Moderator"))
    {
        <li class="nav-item"><a class="nav-link " id="edit-dentists" href="/Moderator/Dentists/AllDentists">Edit Dentists</a></li>
        <li class="nav-item"><a class="nav-link " id="edit-procedures" href="/Moderator/Procedures/AllProcedures">Edit Procedures</a></li>
        <li class="nav-item"><a class="nav-link " id="edit-records" href="/Moderator/Records/AllRecords">Edit Records</a></li>

    }
    @if (User.IsInRole("Administrator"))
    {
    <li class="nav-item"><a class="nav-link " id="edit-users" href="/Administration/Users/AllUsers">Edit Users</a></li>
    <li class="nav-item"><a class="nav-link " id="edit-roles" href="/Administration/Roles/AllRoles">Edit Roles</a></li>
    }

</ul>
<br>
